version: "3.9"
services:
  metabase-frontend:
    image: ghcr.io/${REPOSITORY}/metabase-frontend:latest
    container_name: metabase-frontend
    hostname: metabase-frontend
    ports:
      - "3000:3000"
    networks:
      - metanet1
    restart: always
    depends_on:
      - metabase-backend

  metabase-backend:
    image: ghcr.io/${REPOSITORY}/metabase-backend:latest
    container_name: metabase-backend
    hostname: metabase-backend
    volumes:
      - /dev/urandom:/dev/random:ro
    ports:
      - "3002:3002"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabaseappdb
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: ${MB_DB_PASS}
      MB_JETTY_PORT: 3002
    networks:
      - metanet1
    healthcheck:
      test: curl --fail -I http://localhost:3002/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
    restart: always

  postgres:
    image: postgres:latest
    container_name: postgres-metabase
    hostname: postgres
    environment:
      POSTGRES_USER: metabase
      POSTGRES_DB: metabaseappdb
      POSTGRES_PASSWORD: ${MB_DB_PASS}
    networks:
      - metanet1
    restart: always

  backend-bot:
    build:
      context: ./backend-bot
      dockerfile: Dockerfile
    container_name: backend-bot
    hostname: backend-bot
    ports:
      - "3001:3001"
    networks:
      - metanet1
    restart: always

networks:
  metanet1:
    driver: bridge
