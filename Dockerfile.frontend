# Stage 1: Build Frontend
FROM node:22-bullseye AS builder

# Install Java and Clojure dependencies
RUN apt-get update && apt-get install -y \
    openjdk-17-jdk \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install Clojure CLI
RUN curl -L -O https://github.com/clojure/brew-install/releases/latest/download/linux-install.sh && \
    chmod +x linux-install.sh && \
    ./linux-install.sh && \
    rm linux-install.sh

# Set JAVA_HOME
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64

WORKDIR /home/node

# Copy package files first for better caching
COPY package.json yarn.lock ./
COPY shadow-cljs.edn ./

# Install dependencies
RUN yarn install --frozen-lockfile

# Copy source code
COPY . .

# Fix git ownership issue (in some environments)
RUN git config --global --add safe.directory /home/node || true

# Build frontend
RUN INTERACTIVE=false CI=true MB_EDITION=oss yarn build

# Stage 2: Serve Frontend via Nginx
FROM nginx:alpine

# Copy built frontend assets
COPY --from=builder /home/node/resources/frontend_client /usr/share/nginx/html

# Copy updated nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

RUN rm -f /etc/nginx/nginx.conf && \
    echo -e 'user nginx;\nworker_processes auto;\nevents {\n    worker_connections 1024;\n}\nhttp {\n    include /etc/nginx/mime.types;\n    default_type application/octet-stream;\n    sendfile on;\n    keepalive_timeout 65;\n    include /etc/nginx/conf.d/*.conf;\n}' > /etc/nginx/nginx.conf
# Expose frontend port
EXPOSE 3000

CMD ["nginx", "-g", "daemon off;"]
